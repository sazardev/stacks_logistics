// Mocks generated by Mockito 5.4.4 from annotations
// in stacks_logistics/test/unit/core/services/container_notification_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:stacks_logistics/core/error/failures.dart' as _i5;
import 'package:stacks_logistics/features/notifications/domain/entities/app_notification.dart'
    as _i6;
import 'package:stacks_logistics/features/notifications/domain/repository_interfaces/notification_repository.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NotificationRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockNotificationRepository extends _i1.Mock
    implements _i3.NotificationRepository {
  MockNotificationRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Stream<_i2.Either<_i5.Failure, _i6.AppNotification>>
      get notificationStream => (super.noSuchMethod(
            Invocation.getter(#notificationStream),
            returnValue: _i4
                .Stream<_i2.Either<_i5.Failure, _i6.AppNotification>>.empty(),
          ) as _i4.Stream<_i2.Either<_i5.Failure, _i6.AppNotification>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.AppNotification>>>
      getAllNotifications() => (super.noSuchMethod(
            Invocation.method(
              #getAllNotifications,
              [],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure, List<_i6.AppNotification>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.AppNotification>>(
              this,
              Invocation.method(
                #getAllNotifications,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.AppNotification>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, int>> getUnreadNotificationsCount() =>
      (super.noSuchMethod(
        Invocation.method(
          #getUnreadNotificationsCount,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, int>>.value(
            _FakeEither_0<_i5.Failure, int>(
          this,
          Invocation.method(
            #getUnreadNotificationsCount,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, int>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.AppNotification>>>
      getNotificationsByType(_i6.NotificationType? type) => (super.noSuchMethod(
            Invocation.method(
              #getNotificationsByType,
              [type],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure, List<_i6.AppNotification>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.AppNotification>>(
              this,
              Invocation.method(
                #getNotificationsByType,
                [type],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.AppNotification>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.AppNotification>>>
      getNotificationsByPriority(_i6.NotificationPriority? priority) =>
          (super.noSuchMethod(
            Invocation.method(
              #getNotificationsByPriority,
              [priority],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure, List<_i6.AppNotification>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.AppNotification>>(
              this,
              Invocation.method(
                #getNotificationsByPriority,
                [priority],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.AppNotification>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.AppNotification>>>
      getNotificationsByContainer(String? containerId) => (super.noSuchMethod(
            Invocation.method(
              #getNotificationsByContainer,
              [containerId],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure, List<_i6.AppNotification>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.AppNotification>>(
              this,
              Invocation.method(
                #getNotificationsByContainer,
                [containerId],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.AppNotification>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> markAsRead(
          String? notificationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #markAsRead,
          [notificationId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #markAsRead,
            [notificationId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> markAllAsRead() =>
      (super.noSuchMethod(
        Invocation.method(
          #markAllAsRead,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #markAllAsRead,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> deleteNotification(
          String? notificationId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteNotification,
          [notificationId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #deleteNotification,
            [notificationId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> deleteAllNotifications() =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAllNotifications,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #deleteAllNotifications,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.AppNotification>> createNotification(
          _i6.AppNotification? notification) =>
      (super.noSuchMethod(
        Invocation.method(
          #createNotification,
          [notification],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, _i6.AppNotification>>.value(
                _FakeEither_0<_i5.Failure, _i6.AppNotification>(
          this,
          Invocation.method(
            #createNotification,
            [notification],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.AppNotification>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, String?>> initializeFCM() =>
      (super.noSuchMethod(
        Invocation.method(
          #initializeFCM,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, String?>>.value(
            _FakeEither_0<_i5.Failure, String?>(
          this,
          Invocation.method(
            #initializeFCM,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, String?>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> subscribeToTopic(String? topic) =>
      (super.noSuchMethod(
        Invocation.method(
          #subscribeToTopic,
          [topic],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #subscribeToTopic,
            [topic],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> unsubscribeFromTopic(
          String? topic) =>
      (super.noSuchMethod(
        Invocation.method(
          #unsubscribeFromTopic,
          [topic],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #unsubscribeFromTopic,
            [topic],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> updateFCMToken(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateFCMToken,
          [token],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #updateFCMToken,
            [token],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, String?>> getFCMToken() =>
      (super.noSuchMethod(
        Invocation.method(
          #getFCMToken,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, String?>>.value(
            _FakeEither_0<_i5.Failure, String?>(
          this,
          Invocation.method(
            #getFCMToken,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, String?>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> clearLocalNotifications() =>
      (super.noSuchMethod(
        Invocation.method(
          #clearLocalNotifications,
          [],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #clearLocalNotifications,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.AppNotification>>>
      syncNotifications() => (super.noSuchMethod(
            Invocation.method(
              #syncNotifications,
              [],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure, List<_i6.AppNotification>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.AppNotification>>(
              this,
              Invocation.method(
                #syncNotifications,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.AppNotification>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i3.NotificationSettings>>
      getNotificationSettings() => (super.noSuchMethod(
            Invocation.method(
              #getNotificationSettings,
              [],
            ),
            returnValue: _i4.Future<
                    _i2.Either<_i5.Failure, _i3.NotificationSettings>>.value(
                _FakeEither_0<_i5.Failure, _i3.NotificationSettings>(
              this,
              Invocation.method(
                #getNotificationSettings,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, _i3.NotificationSettings>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> updateNotificationSettings(
          _i3.NotificationSettings? settings) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateNotificationSettings,
          [settings],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #updateNotificationSettings,
            [settings],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);
}
